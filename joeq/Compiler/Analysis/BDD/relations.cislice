vP ( v:V bdd=V0 , h:H bdd=H0 ) load
hP ( ha:H bdd=H0 , field:F bdd=F0 , hb:H bdd=H1 ) load
actual ( invoke:I bdd=I0 , num:Z bdd=Z0 , actualparam:V bdd=V1 ) load
formal ( method:M bdd=M0 , num:Z bdd=Z0 , formalparam:V bdd=V0 ) load
Mret ( method:M bdd=M0 , v:V bdd=V1 ) load
Mthr ( method:M bdd=M0 , v:V bdd=V1 ) load
Iret ( invoke:I bdd=I0 , v:V bdd=V0 ) load
Ithr ( invoke:I bdd=I0 , v:V bdd=V0 ) load
mI ( method:M bdd=M0 , invoke:I bdd=I0 , name:N bdd=N0 ) load
IE ( invoke:I , target:M bdd=M0 ) load
m2q ( method:M , quad:quad ) load
ssa ( quad : quad bdd=quad0, opc : op bdd=op0 , dest : reg bdd=reg0 , constant : constant bdd=constant0 , member : member bdd=member0 , srcNum : varargs bdd=varargs0 , srcs : reg bdd=reg1 ) load
vReg ( v:V bdd=V0 , method:M bdd=M0 , reg:reg bdd=reg0 ) load
#iQuad ( invoke:I bdd=I0 , quad:quad bdd=quad0 ) load
#fMember ( field:F bdd=F0 , member:member bdd=member0 ) load
dd ( quad:quad bdd=quad1, dep:quad bdd=quad2 ) savetuples
slice ( quad:quad bdd=quad0, dep:quad bdd=quad1 ) save
S ( base:V bdd=V0 , field:F bdd=F0 , src:V bdd=V1 ) load
L ( base:V bdd=V0 , field:F bdd=F0 , dest:V bdd=V1 ) load
ipEdgeV( src:V , dest:V )
ipEdgeMR( srcm:M , srcr:reg , destM:M , destr:reg )
sources(quad:quad, method:M, reg:reg)
dests(quad:quad, method:M, reg:reg)
getfield(op:op)
putfield(op:op)
getstatic(op:op)
putstatic(op:op)
aload(op:op)
astore(op:op)
aloadheap(quad:quad, h:H)
astoreheap(quad:quad, h:H)



